import console;
import table;
import win.appBar;
import win.property;

var registerChangeWinSizeHook,registerDestroyWinHook = loadcodex("\src\win_move.aardio")


var recoverMap = {} // 储存用于恢复的rect

function delRecoverMapHwnd(hwnd){
	var index;
	for i, v in recoverMap {
		if (v[1] == hwnd) {
			index = i
		}
	}
	
	if (index) {
		table.remove(recoverMap, index)
	}
}


// 监听窗口大小变化
registerChangeWinSizeHook(function(hwnd){
	delRecoverMapHwnd(hwnd)
	table.push(recoverMap, {hwnd,win.getRect(hwnd, true)})
})
// 监听窗口被销毁，防止内存泄露
registerDestroyWinHook(function(hwnd){
	delRecoverMapHwnd(hwnd)
})


var lastActiveHwnd;
function updateWinSize(calculate){
	var activeHwnd = win.getForeground();
	var appBarHwnd = win.appBar.find() // 系统任务栏句柄
	if (lastActiveHwnd && (activeHwnd == appBarHwnd || activeHwnd == global.hwnd)) { 
		activeHwnd = lastActiveHwnd; // 如果当前是 系统任务栏，则恢复上次的活动窗口lastActiveHwnd
	} else {
		lastActiveHwnd = activeHwnd; // 记录上次的活动窗口句柄
	}
	
	if (!activeHwnd) {
		return
	}
	var workArea = win.getWorkArea();
	var workWidth = workArea.right - workArea.left;  // 工作区域的宽度
	var workHeight = workArea.bottom - workArea.top; // 工作区域的高度
	
    // 获取窗口当前的坐标和尺寸
    var rect = win.getRect(activeHwnd);
    var w,h = win.getScreen()
    // 修改窗口的宽度和高度
	// 设置窗口的新尺寸
	var nrect = calculate(rect, {workWidth:workWidth,workHeight:workHeight})
    win.setRect(activeHwnd, nrect, true)
	//win.setPos(activeHwnd, nrect.left, nrect.top, nrect.right, nrect.bottom)
}
	
var keys = {
	{ id: "leftHalfTemplate.png", name: "左半屏", tip: "Ctrl+Alt+LEFT(◀)", key: "Ctrl+Alt+Left", keys: { [key.VK["LCTRL"]] = key.VK["LCTRL"]; [key.VK["LALT"]] = key.VK["LALT"]; [key.VK["LEFT"]] = key.VK["LEFT"] },
		update = function(){
			var func = function(rect, work) {
				rect.left = 0;
				rect.right = math.floor(work.workWidth / 2);
				rect.top = 0;
				rect.bottom = work.workHeight;
				return rect; 
			}
			updateWinSize(func)
		},
	 },
	{ id: "rightHalfTemplate.png", name: "右半屏", tip: "Ctrl+Alt+RIGHT(▶)", key: "Ctrl+Alt+Right", keys: { [key.VK["LCTRL"]] = key.VK["LCTRL"]; [key.VK["LALT"]] = key.VK["LALT"]; [key.VK["RIGHT"]] = key.VK["RIGHT"] },
		update = function(){
			var func = function(rect, work) {
				rect.left = math.floor(work.workWidth / 2);
				rect.right = work.workWidth;
				rect.top = 0;
				rect.bottom = work.workHeight;
				return rect; 
			}
			updateWinSize(func)
		}
	 },
	{ id: "halfWidthCenterTemplate.png", name:  "中间半屏", tip: "", key: "", keys: {},
		update = function(){
			var func = function(rect, work) {
				rect.left = math.floor(work.workWidth / 4);
				rect.right = math.floor(work.workWidth / 4) * 3;
				rect.top = 0;
				rect.bottom = work.workHeight;
				return rect; 
			}
			updateWinSize(func)
		}
	 },
	{ id: "topHalfTemplate.png", name: "上半屏", tip: "Ctrl+Alt+UP(▲)", key: "Ctrl+Alt+UP", keys: { [key.VK["LCTRL"]] = key.VK["LCTRL"]; [key.VK["LALT"]] = key.VK["LALT"]; [key.VK["UP"]] = key.VK["UP"] },
		update = function(){
			var func = function(rect, work) {
				rect.left = 0;
				rect.right = work.workWidth;
				rect.top = 0;
				rect.bottom = math.floor(work.workHeight / 2);
				return rect; 
			}
			updateWinSize(func)
		}
	 },
	{ id: "bottomHalfTemplate.png", name: "下半屏", tip: "Ctrl+Alt+DOWN(▼)", key: "Ctrl+Alt+DOWN", keys: { [key.VK["LCTRL"]] = key.VK["LCTRL"]; [key.VK["LALT"]] = key.VK["LALT"]; [key.VK["DOWN"]] = key.VK["DOWN"] },
		update = function(){
			var func = function(rect, work) {
				rect.left = 0;
				rect.right = work.workWidth;
				rect.top = math.floor(work.workHeight / 2);
				rect.bottom = work.workHeight;
				return rect; 
			}
			updateWinSize(func)
		}
	 },
	{id: "line",},
	{ id: "topLeftTemplate.png", name: "左上", tip: "Ctrl+Alt+U", key: "Ctrl+Alt+U", keys: { [key.VK["LCTRL"]] = key.VK["LCTRL"]; [key.VK["LALT"]] = key.VK["LALT"]; [key.VK["U"]] = key.VK["U"] },
		update = function(){
			var func = function(rect, work) {
				rect.left = 0;
				rect.right = math.floor(work.workWidth / 2);
				rect.top = 0;
				rect.bottom = math.floor(work.workHeight / 2);
				return rect;
			}
			updateWinSize(func)
		}
	  },
	{ id: "topRightTemplate.png", name: "右上", tip: "Ctrl+Alt+I", key: "Ctrl+Alt+I", keys: { [key.VK["LCTRL"]] = key.VK["LCTRL"]; [key.VK["LALT"]] = key.VK["LALT"]; [key.VK["I"]] = key.VK["I"] },
		update = function(){
			var func = function(rect, work) {
				rect.left = math.floor(work.workWidth / 2);
				rect.right = work.workWidth;
				rect.top = 0;
				rect.bottom = math.floor(work.workHeight / 2);
				return rect;
			}
			updateWinSize(func)
		}
	  },
	{ id: "bottomLeftTemplate.png", name: "左下", tip: "Ctrl+Alt+J", key: "Ctrl+Alt+J", keys: { [key.VK["LCTRL"]] = key.VK["LCTRL"]; [key.VK["LALT"]] = key.VK["LALT"]; [key.VK["J"]] = key.VK["J"] },
		update = function(){
			var func = function(rect, work) {
				rect.left = 0;
				rect.right = math.floor(work.workWidth / 2);
				rect.top = math.floor(work.workHeight / 2);
				rect.bottom = work.workHeight;
				return rect;
			}
			updateWinSize(func)
		}
	  },
	{ id: "bottomRightTemplate.png", name: "右下", tip: "Ctrl+Alt+K", key: "Ctrl+Alt+K", keys: { [key.VK["LCTRL"]] = key.VK["LCTRL"]; [key.VK["LALT"]] = key.VK["LALT"]; [key.VK["K"]] = key.VK["K"] },
		update = function(){
			var func = function(rect, work) {
				rect.left = math.floor(work.workWidth / 2);
				rect.right = work.workWidth;
				rect.top = math.floor(work.workHeight / 2);
				rect.bottom = work.workHeight;
				return rect;
			}
			updateWinSize(func)
		}
	  },
	{id: "line",},
	{ id: "firstThirdTemplate.png", name: "左首1 / 3", tip: "Ctrl+Alt+D", key: "Ctrl+Alt+D", keys: { [key.VK["LCTRL"]] = key.VK["LCTRL"]; [key.VK["LALT"]] = key.VK["LALT"]; [key.VK["D"]] = key.VK["D"] },
		update = function(){
			var func = function(rect, work) {
				rect.left = 0;
				rect.right = math.floor(work.workWidth / 3);
				rect.top = 0;
				rect.bottom = work.workHeight;
				return rect;
			}
			updateWinSize(func)
		}
	  },
	{ id: "centerThirdTemplate.png", name: "中间1 / 3", tip: "Ctrl+Alt+F", key: "Ctrl+Alt+F", keys: { [key.VK["LCTRL"]] = key.VK["LCTRL"]; [key.VK["LALT"]] = key.VK["LALT"]; [key.VK["F"]] = key.VK["F"] },
		update = function(){
			var func = function(rect, work) {
				rect.left = math.floor(work.workWidth / 3);
				rect.right = math.floor(work.workWidth / 3) * 2;
				rect.top = 0;
				rect.bottom = work.workHeight;
				return rect;
			}
			updateWinSize(func)
		}
	  },
	{ id: "lastThirdTemplate.png", name: "右首1 / 3", tip: "Ctrl+Alt+G", key: "Ctrl+Alt+G", keys: { [key.VK["LCTRL"]] = key.VK["LCTRL"]; [key.VK["LALT"]] = key.VK["LALT"]; [key.VK["G"]] = key.VK["G"] },
		update = function(){
			var func = function(rect, work) {
				rect.left = math.floor(work.workWidth / 3) * 2;
				rect.right = work.workWidth;
				rect.top = 0;
				rect.bottom = work.workHeight;
				return rect;
			}
			updateWinSize(func)
		}
	  },
	{ id: "firstTwoThirdsTemplate.png", name:  "左侧2 / 3", tip: "Ctrl+Alt+E", key: "Ctrl+Alt+E", keys: { [key.VK["LCTRL"]] = key.VK["LCTRL"]; [key.VK["LALT"]] = key.VK["LALT"]; [key.VK["E"]] = key.VK["E"] },
		update = function(){
			var func = function(rect, work) {
				rect.left = 0;
				rect.right = math.floor(work.workWidth / 3) * 2;
				rect.top = 0;
				rect.bottom = work.workHeight;
				return rect;
			}
			updateWinSize(func)
		}
	  },
	{ id: "lastTwoThirdsTemplate.png", name: "右侧2 / 3", tip: "Ctrl+Alt+T", key: "Ctrl+Alt+T", keys: { [key.VK["LCTRL"]] = key.VK["LCTRL"]; [key.VK["LALT"]] = key.VK["LALT"]; [key.VK["T"]] = key.VK["T"] },
		update = function(){
			var func = function(rect, work) {
				rect.left = math.floor(work.workWidth / 3);
				rect.right = work.workWidth;
				rect.top = 0;
				rect.bottom = work.workHeight;
				return rect;
			}
			updateWinSize(func)
		}
	  },
	{id: "line",},
	{ id: "maximizeTemplate.png", name: "最大化", tip: "Ctrl+Alt+ENTER", key: "Ctrl+Alt+ENTER", keys: { [key.VK["LCTRL"]] = key.VK["LCTRL"]; [key.VK["LALT"]] = key.VK["LALT"]; [key.VK["ENTER"]] = key.VK["ENTER"] },
		update = function(){
			// https://learn.microsoft.com/zh-cn/windows/win32/api/winuser/nf-winuser-showwindow
			::User32.ShowWindow(win.getForeground(), 3)
		}
	  },
	{ id: "almostMaximizeTemplate.png", name: "接近最大化",tip: "", key: "", keys: {  },
		update = function(){
			var func = function(rect, work) {
				var margin = 20;
				rect.left = margin;
				rect.right = work.workWidth - margin;
				rect.top = margin;
				rect.bottom = work.workHeight - margin;
				return rect;
			}
			updateWinSize(func)
		}
	 },
	{ id: "maximizeHeightTemplate.png", name: "最大化高度", tip: "Ctrl+Alt+SHIFT+UP", key: "Ctrl+Alt+SHIFT+UP", keys: { [key.VK["LCTRL"]] = key.VK["LCTRL"]; [key.VK["LALT"]] = key.VK["LALT"]; [key.VK["SHIFT"]] = key.VK["SHIFT"]; [key.VK["UP"]] = key.VK["UP"] },
		update = function(){
			var func = function(rect, work) {
				//rect.left = 0;
				//rect.right = work.workWidth;*/
				rect.top = 0;
				rect.bottom = work.workHeight;
				return rect;
			}
			updateWinSize(func)
		}
	  },
	{ id: "makeSmallerTemplate.png", name: "缩小", tip: "Ctrl+Alt+-", key: "Ctrl+Alt+-", keys: { [key.VK["LCTRL"]] = key.VK["LCTRL"]; [key.VK["LALT"]] = key.VK["LALT"]; [key.VK["MINU"]] = key.VK["MINU"] },
		update = function(){
			var func = function(rect, work) {
				var step = 30;
				if (rect.left + step > rect.right - step) {
					rect.left = rect.left + step;
					rect.right = rect.right - step;
				}
				if (rect.top + step > rect.bottom - step) {
					rect.top = rect.top + step;
					rect.bottom = rect.bottom - step;
				}

				return rect;
			}
			updateWinSize(func)
		}
	  },
	{ id: "makeLargerTemplate.png", name: "放大", tip: "Ctrl+Alt+=", key: "Ctrl+Alt+=", keys: { [key.VK["LCTRL"]] = key.VK["LCTRL"]; [key.VK["LALT"]] = key.VK["LALT"]; [key.VK["PLUS"]] = key.VK["PLUS"] },
		update = function(){
			var func = function(rect, work) {
				var step = 30;
				if (rect.left - step < 0) { // 防止左边超出
					rect.left = 0
				} else {
					rect.left = rect.left - step;
				}
				if (rect.right + step > work.workWidth) { // 防止右边超出
					rect.right = work.workWidth
				} else {
					rect.right = rect.right + step;
				}
				if (rect.top - step < 0) { // 防止上边超出
					rect.top = 0
				} else {
					rect.top = rect.top - step;
				}
				if (rect.bottom + step > work.workHeight) { // 防止下边超出
					rect.bottom = work.workHeight
				} else {
					rect.bottom = rect.bottom + step;
				}
				return rect;
			}
			updateWinSize(func)
		}
	  },
	{ id: "centerTemplate.png", name: "中间", tip: "Ctrl+Alt+C",key: "Ctrl+Alt+C", keys: { [key.VK["LCTRL"]] = key.VK["LCTRL"]; [key.VK["LALT"]] = key.VK["LALT"]; [key.VK["C"]] = key.VK["C"] },
		update = function(){
			var func = function(rect, work) {
				rect.left = math.floor(work.workWidth / 3);
				rect.right = math.floor(work.workWidth / 3) * 2;
				rect.top = math.floor(work.workHeight / 3);
				rect.bottom = math.floor(work.workHeight / 3) * 2;
				return rect;
			}
			updateWinSize(func)
		}
	  },
	{ id: "restoreTemplate.png", name: "恢复", tip: "Ctrl+Alt+BACK", key: "Ctrl+Alt+BACK", keys: { [key.VK["LCTRL"]] = key.VK["LCTRL"]; [key.VK["LALT"]] = key.VK["LALT"]; [key.VK["BACK"]] = key.VK["BACK"] },
		update = function(){
			var func = function(rect, work) {
				for i,v in recoverMap {
					if (v[1] === win.getForeground()) {
						return v[2]; 
					}
				}
				return rect;
			}
			updateWinSize(func)
		}
	
	  },
	{id: "line",},
	{ id: "prevDisplayTemplate.png", name: "下一个显示器", tip: "Ctrl+Alt+WIN+LEFT", key: "Ctrl+Alt+WIN+LEFT", keys: { [key.VK["LCTRL"]] = key.VK["LCTRL"]; [key.VK["LALT"]] = key.VK["LALT"]; [key.VK["WIN"]] = key.VK["WIN"]; [key.VK["LEFT"]] = key.VK["LEFT"] },
		update = function(){
			//console.log("下一个显示器")
		}
	  },
	{ id: "nextDisplayTemplate.png", name: "上一个显示器", tip: "Ctrl+Alt+WIN+RIGHT", key: "Ctrl+Alt+WIN+RIGHT", keys: { [key.VK["LCTRL"]] = key.VK["LCTRL"]; [key.VK["LALT"]] = key.VK["LALT"]; [key.VK["WIN"]] = key.VK["WIN"]; [key.VK["RIGHT"]] = key.VK["RIGHT"] },
		update = function(){
			//console.log("上一个显示器")
		}
	  },
}

return keys; 